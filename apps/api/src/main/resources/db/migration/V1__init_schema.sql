CREATE TABLE address (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    street VARCHAR(255) NOT NULL,
    number INTEGER NOT NULL,
    complement VARCHAR(255),
    district VARCHAR(255) NOT NULL,
    city VARCHAR(255) NOT NULL,
    state VARCHAR(255) NOT NULL,
    zip_code VARCHAR(20) NOT NULL,
    country VARCHAR(255) NOT NULL
);

CREATE TABLE store (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    store_full_name VARCHAR(255) NOT NULL,
    store_display_name VARCHAR(255) NOT NULL,
    cnpj VARCHAR(20) NOT NULL UNIQUE,
    store_phone VARCHAR(20) NOT NULL,
    store_email VARCHAR(255) NOT NULL UNIQUE,
    address_id INTEGER NOT NULL,
    CONSTRAINT fk_store_address FOREIGN KEY (address_id) REFERENCES address(id)
);

CREATE TABLE employee_type (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    employee_type_name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE employee_status (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    employee_status_name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE employee (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    employee_full_name VARCHAR(255) NOT NULL,
    employee_display_name VARCHAR(255) NOT NULL,
    cpf VARCHAR(20) NOT NULL UNIQUE,
    employee_phone VARCHAR(20) NOT NULL UNIQUE,
    salary DECIMAL(12, 2) NOT NULL,
    admission_date DATE NOT NULL,
    termination_date DATE,
    employee_type_id INTEGER NOT NULL,
    employee_status_id INTEGER NOT NULL,
    address_id INTEGER NOT NULL,
    CONSTRAINT fk_employee_type FOREIGN KEY (employee_type_id) REFERENCES employee_type(id),
    CONSTRAINT fk_employee_status FOREIGN KEY (employee_status_id) REFERENCES employee_status(id),
    CONSTRAINT fk_employee_address FOREIGN KEY (address_id) REFERENCES address(id)
);

CREATE TABLE employee_store (
    employee_id INTEGER NOT NULL,
    store_id INTEGER NOT NULL,
    
    PRIMARY KEY (employee_id, store_id),
    
    CONSTRAINT fk_employee_store_employee FOREIGN KEY (employee_id) REFERENCES employee(id),
    CONSTRAINT fk_employee_store_store FOREIGN KEY (store_id) REFERENCES store(id)
);

CREATE TABLE user_type_name (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_type_name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE user_status (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_status_name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_email VARCHAR(255) NOT NULL UNIQUE,
    user_password VARCHAR(255) NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    employee_id INTEGER,
    user_type_name_id INTEGER,
    user_status_id INTEGER,
    store_id INTEGER,

    CONSTRAINT fk_employee_id FOREIGN KEY (employee_id) REFERENCES employee(id),
    CONSTRAINT fk_user_type_name_id FOREIGN KEY (user_type_name_id) REFERENCES user_type_name(id),
    CONSTRAINT fk_user_status_id FOREIGN KEY (user_status_id) REFERENCES user_status(id),
    CONSTRAINT fk_store_id FOREIGN KEY (store_id) REFERENCES store(id)
);

CREATE TABLE client (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    client_name VARCHAR(255) NOT NULL,
    client_display_name VARCHAR(255) NOT NULL,
    cpf_cnpj VARCHAR(20) NOT NULL UNIQUE,
    client_phone VARCHAR(20) NOT NULL UNIQUE,
    client_email VARCHAR(255) NOT NULL UNIQUE,

    store_id INTEGER NOT NULL,
    address_id INTEGER NOT NULL,

    CONSTRAINT fk_client_store FOREIGN KEY (store_id) REFERENCES store(id),
    CONSTRAINT fk_client_address FOREIGN KEY (address_id) REFERENCES address(id)
);

CREATE TABLE supplier (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    supplier_full_name VARCHAR(255) NOT NULL,
    supplier_display_name VARCHAR(255) NOT NULL,
    cpf_cnpj VARCHAR(20) NOT NULL UNIQUE,
    supplier_phone VARCHAR(20) NOT NULL UNIQUE,
    supplier_email VARCHAR(255) NOT NULL UNIQUE,
    address_id INTEGER NOT NULL,
    store_id INTEGER NOT NULL,

    CONSTRAINT fk_supplier_address FOREIGN KEY (address_id) REFERENCES address(id),
    CONSTRAINT fk_supplier_store FOREIGN KEY (store_id) REFERENCES store(id)
);